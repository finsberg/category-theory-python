Search.setIndex({"alltitles": {"Category": [[1, "category"]], "Category Theory for python programmers": [[0, "category-theory-for-python-programmers"]], "Category theory": [[1, "category-theory"]], "Contributing": [[0, "contributing"]], "Indices and tables": [[3, "indices-and-tables"]], "Module contents": [[2, "module-category_theory"]], "Submodules": [[2, "submodules"]], "Testing": [[0, "testing"]], "Typing": [[0, "typing"]], "Welcome to Category Theory for Python programmers\u2019s documentation!": [[3, "welcome-to-category-theory-for-python-programmers-s-documentation"]], "category_theory": [[4, "category-theory"]], "category_theory package": [[2, "category-theory-package"]], "category_theory.applicative module": [[2, "module-category_theory.applicative"]], "category_theory.core module": [[2, "module-category_theory.core"]], "category_theory.functor module": [[2, "module-category_theory.functor"]], "category_theory.monoid module": [[2, "module-category_theory.monoid"]], "category_theory.operations module": [[2, "module-category_theory.operations"]], "category_theory.par_operations module": [[2, "module-category_theory.par_operations"]]}, "docnames": ["README", "about", "category_theory", "index", "modules"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1}, "filenames": ["README.md", "about.md", "category_theory.rst", "index.rst", "modules.rst"], "indexentries": {"all (class in category_theory.monoid)": [[2, "category_theory.monoid.All", false]], "any (class in category_theory.monoid)": [[2, "category_theory.monoid.Any", false]], "applicative (class in category_theory.core)": [[2, "category_theory.core.Applicative", false]], "apply() (category_theory.applicative.just method)": [[2, "category_theory.applicative.Just.apply", false]], "apply() (category_theory.core.applicative method)": [[2, "category_theory.core.Applicative.apply", false]], "atomic (class in category_theory.core)": [[2, "category_theory.core.Atomic", false]], "category_theory": [[2, "module-category_theory", false]], "category_theory.applicative": [[2, "module-category_theory.applicative", false]], "category_theory.core": [[2, "module-category_theory.core", false]], "category_theory.functor": [[2, "module-category_theory.functor", false]], "category_theory.monoid": [[2, "module-category_theory.monoid", false]], "category_theory.operations": [[2, "module-category_theory.operations", false]], "category_theory.par_operations": [[2, "module-category_theory.par_operations", false]], "chunkify() (in module category_theory.par_operations)": [[2, "category_theory.par_operations.chunkify", false]], "commutativemonoid (class in category_theory.core)": [[2, "category_theory.core.CommutativeMonoid", false]], "compose() (in module category_theory.operations)": [[2, "category_theory.operations.compose", false]], "e() (category_theory.core.monoid static method)": [[2, "category_theory.core.Monoid.e", false]], "e() (category_theory.monoid.all static method)": [[2, "category_theory.monoid.All.e", false]], "e() (category_theory.monoid.any static method)": [[2, "category_theory.monoid.Any.e", false]], "e() (category_theory.monoid.intplus static method)": [[2, "category_theory.monoid.IntPlus.e", false]], "e() (category_theory.monoid.intprod static method)": [[2, "category_theory.monoid.IntProd.e", false]], "e() (category_theory.monoid.maybeintplus static method)": [[2, "category_theory.monoid.MaybeIntPlus.e", false]], "e() (category_theory.monoid.maybeintprod static method)": [[2, "category_theory.monoid.MaybeIntProd.e", false]], "e() (category_theory.monoid.string static method)": [[2, "category_theory.monoid.String.e", false]], "fold() (in module category_theory)": [[2, "category_theory.fold", false]], "fold() (in module category_theory.operations)": [[2, "category_theory.operations.fold", false]], "fold() (in module category_theory.par_operations)": [[2, "category_theory.par_operations.fold", false]], "foldr() (in module category_theory)": [[2, "category_theory.foldr", false]], "foldr() (in module category_theory.operations)": [[2, "category_theory.operations.foldr", false]], "functor (class in category_theory.core)": [[2, "category_theory.core.Functor", false]], "identity() (in module category_theory.operations)": [[2, "category_theory.operations.identity", false]], "intplus (class in category_theory.monoid)": [[2, "category_theory.monoid.IntPlus", false]], "intprod (class in category_theory.monoid)": [[2, "category_theory.monoid.IntProd", false]], "is_nothing() (in module category_theory.operations)": [[2, "category_theory.operations.is_nothing", false]], "just (class in category_theory.applicative)": [[2, "category_theory.applicative.Just", false]], "just (class in category_theory.functor)": [[2, "category_theory.functor.Just", false]], "list (class in category_theory.functor)": [[2, "category_theory.functor.List", false]], "map() (category_theory.core.functor method)": [[2, "category_theory.core.Functor.map", false]], "map() (category_theory.functor.just method)": [[2, "category_theory.functor.Just.map", false]], "map() (category_theory.functor.list method)": [[2, "category_theory.functor.List.map", false]], "maybe (class in category_theory.applicative)": [[2, "category_theory.applicative.Maybe", false]], "maybe (class in category_theory.functor)": [[2, "category_theory.functor.Maybe", false]], "maybe() (in module category_theory.applicative)": [[2, "category_theory.applicative.maybe", false]], "maybe() (in module category_theory.functor)": [[2, "category_theory.functor.maybe", false]], "maybeintplus (class in category_theory.monoid)": [[2, "category_theory.monoid.MaybeIntPlus", false]], "maybeintprod (class in category_theory.monoid)": [[2, "category_theory.monoid.MaybeIntProd", false]], "module": [[2, "module-category_theory", false], [2, "module-category_theory.applicative", false], [2, "module-category_theory.core", false], [2, "module-category_theory.functor", false], [2, "module-category_theory.monoid", false], [2, "module-category_theory.operations", false], [2, "module-category_theory.par_operations", false]], "monoid (class in category_theory.core)": [[2, "category_theory.core.Monoid", false]], "par_fold() (in module category_theory)": [[2, "category_theory.par_fold", false]], "pure() (category_theory.applicative.maybe static method)": [[2, "category_theory.applicative.Maybe.pure", false]], "pure() (category_theory.core.applicative static method)": [[2, "category_theory.core.Applicative.pure", false]], "string (class in category_theory.monoid)": [[2, "category_theory.monoid.String", false]], "validation (class in category_theory.applicative)": [[2, "category_theory.applicative.Validation", false]]}, "objects": {"": [[2, 0, 0, "-", "category_theory"]], "category_theory": [[2, 0, 0, "-", "applicative"], [2, 0, 0, "-", "core"], [2, 3, 1, "", "fold"], [2, 3, 1, "", "foldr"], [2, 0, 0, "-", "functor"], [2, 0, 0, "-", "monoid"], [2, 0, 0, "-", "operations"], [2, 3, 1, "", "par_fold"], [2, 0, 0, "-", "par_operations"]], "category_theory.applicative": [[2, 1, 1, "", "Just"], [2, 1, 1, "", "Maybe"], [2, 1, 1, "", "Validation"], [2, 3, 1, "", "maybe"]], "category_theory.applicative.Just": [[2, 2, 1, "", "apply"]], "category_theory.applicative.Maybe": [[2, 2, 1, "", "pure"]], "category_theory.core": [[2, 1, 1, "", "Applicative"], [2, 1, 1, "", "Atomic"], [2, 1, 1, "", "CommutativeMonoid"], [2, 1, 1, "", "Functor"], [2, 1, 1, "", "Monoid"]], "category_theory.core.Applicative": [[2, 2, 1, "", "apply"], [2, 2, 1, "", "pure"]], "category_theory.core.Functor": [[2, 2, 1, "", "map"]], "category_theory.core.Monoid": [[2, 2, 1, "", "e"]], "category_theory.functor": [[2, 1, 1, "", "Just"], [2, 1, 1, "", "List"], [2, 1, 1, "", "Maybe"], [2, 3, 1, "", "maybe"]], "category_theory.functor.Just": [[2, 2, 1, "", "map"]], "category_theory.functor.List": [[2, 2, 1, "", "map"]], "category_theory.monoid": [[2, 1, 1, "", "All"], [2, 1, 1, "", "Any"], [2, 1, 1, "", "IntPlus"], [2, 1, 1, "", "IntProd"], [2, 1, 1, "", "MaybeIntPlus"], [2, 1, 1, "", "MaybeIntProd"], [2, 1, 1, "", "String"]], "category_theory.monoid.All": [[2, 2, 1, "", "e"]], "category_theory.monoid.Any": [[2, 2, 1, "", "e"]], "category_theory.monoid.IntPlus": [[2, 2, 1, "", "e"]], "category_theory.monoid.IntProd": [[2, 2, 1, "", "e"]], "category_theory.monoid.MaybeIntPlus": [[2, 2, 1, "", "e"]], "category_theory.monoid.MaybeIntProd": [[2, 2, 1, "", "e"]], "category_theory.monoid.String": [[2, 2, 1, "", "e"]], "category_theory.operations": [[2, 3, 1, "", "compose"], [2, 3, 1, "", "fold"], [2, 3, 1, "", "foldr"], [2, 3, 1, "", "identity"], [2, 3, 1, "", "is_nothing"]], "category_theory.par_operations": [[2, 3, 1, "", "chunkify"], [2, 3, 1, "", "fold"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function"}, "terms": {"": 0, "0": 2, "1": 2, "1000": 2, "1_x": 1, "2": 2, "3": 2, "4": 2, "5": 2, "A": [1, 2], "For": [1, 2], "If": [0, 1, 2], "In": [1, 2], "It": 1, "That": 1, "The": 2, "Then": 2, "There": [1, 2], "__add__": 2, "__radd__": 2, "abc": 2, "about": [0, 1, 2], "abstract": [1, 2], "add": 2, "advanc": 0, "after": 2, "algebra": 1, "all": [1, 2, 4], "also": 0, "am": 0, "an": [0, 1, 2], "ani": [0, 2, 4], "anoth": 1, "anyon": 0, "appli": [2, 4], "applic": [0, 4], "ar": [0, 1, 2], "area": 1, "aris": 1, "arrow": 1, "assess": 0, "associ": 2, "atom": [2, 4], "attempt": [0, 3], "axiom": [1, 2], "b": [1, 2], "bartosz": 0, "base": [0, 2], "becaus": 1, "begin": 2, "beginn": 0, "being": 2, "better": [0, 2], "between": 2, "binari": 2, "book": 0, "bool": 2, "bug": 0, "c": [1, 2], "call": [0, 1, 2], "callabl": 2, "can": [0, 1, 2], "capabl": 0, "case": [0, 2], "categori": 2, "category_theori": 3, "check": 2, "checker": 2, "chunk": 2, "chunk_siz": 2, "chunkifi": [2, 4], "circ": [1, 2], "cl": 2, "class": 2, "collect": 1, "common": [0, 1, 3], "commut": 2, "commutativemonoid": [2, 4], "compos": [2, 4], "composit": [1, 2], "concaten": 2, "concept": [0, 1], "contain": 2, "content": 4, "core": 4, "corner": 0, "could": [0, 1, 2], "cover": 0, "creat": 2, "declar": 2, "default": 2, "definit": 0, "descript": 2, "detail": 0, "differ": 1, "doe": 2, "e": [1, 2, 4], "each": [1, 2], "either": 2, "element": 2, "empti": 2, "end": 2, "equip": 2, "er": 2, "etc": 1, "even": 0, "everi": 1, "exampl": 2, "exist": [1, 2], "f": [1, 2], "fals": 2, "featur": [0, 2], "file": 0, "fillvalu": 2, "find": 0, "first": [0, 2], "fold": [2, 4], "foldr": [2, 4], "follow": 2, "form": 1, "from": [0, 1, 2], "func": 2, "function": [1, 2], "functor": [0, 4], "futur": 0, "g": [1, 2], "gener": 2, "get": 2, "given": 2, "good": 0, "grate": 0, "great": 0, "h": 1, "ha": 2, "have": [0, 1, 2], "here": 2, "higher": 1, "hold": 2, "homeomorph": 1, "homomorph": 1, "hypothesi": 0, "i": [0, 1, 2, 3], "ident": [1, 2, 4], "implement": [0, 2, 3], "index": 3, "inherit": 2, "initi": 2, "input": 2, "insid": 2, "int": 2, "integ": 2, "interest": 1, "interfac": 2, "intplu": [2, 4], "intprod": [2, 4], "investig": 0, "is_even": 2, "is_noth": [2, 4], "isomorph": 1, "issu": 0, "iter": 2, "just": [2, 4], "kei": 2, "know": 1, "knowledg": 1, "known": 2, "lambda": 2, "lambdacast": 0, "latest": 0, "learn": [0, 3], "less": 2, "let": 2, "like": 2, "link": 1, "list": [0, 2, 4], "logic": 1, "lst": 2, "made": 0, "make": 2, "mani": 1, "manli": 0, "map": [1, 2, 4], "mapsto": [1, 2], "mathemat": 1, "mayb": [2, 4], "maybeintplu": [2, 4], "maybeintprod": [2, 4], "me": 0, "mean": 2, "might": 0, "milewski": 0, "mistak": 0, "modul": [3, 4], "monad": 0, "monoid": [0, 4], "more": 0, "morphism": 1, "most": 1, "multipl": 2, "my": [0, 3], "need": 2, "new": 2, "nmid": 2, "none": 2, "note": [0, 2], "noth": 2, "number": 2, "object": [1, 2], "one": [1, 2], "onli": 0, "oper": 4, "option": 2, "other": 2, "otherwis": 2, "our": 2, "out": 1, "output": 2, "packag": [3, 4], "page": 3, "par_fold": [2, 4], "par_oper": 4, "paramet": 2, "parameter": 2, "pattern": 3, "perspect": 1, "place": 2, "platform": 0, "plu": 2, "podcast": 0, "possibl": 2, "pr": 0, "presenc": 2, "probabl": 1, "program": 2, "programm": 1, "progress": 0, "promis": 2, "properti": [0, 1], "pure": [2, 4], "put": 2, "queue": 2, "realli": 0, "reduct": 2, "refer": 1, "regular": 1, "relat": 1, "remain": 2, "repo": 0, "requir": 2, "return": 2, "right": 2, "rightarrow": 2, "same": 2, "search": 3, "second": 2, "semigroup": 2, "sens": 2, "separ": 2, "set": 1, "share": 1, "should": 2, "similar": 1, "size": 2, "so": 2, "some": [0, 1, 3], "someth": 2, "sourc": 2, "split": 2, "spot": [0, 2], "squash": 2, "static": 2, "staticmethod": 2, "str": 2, "string": [2, 4], "structur": [0, 2], "studi": 1, "submit": 0, "submodul": 4, "support": 0, "suppos": 2, "system": 0, "take": 2, "tell": 2, "text": 2, "than": 2, "therefor": 0, "thi": [0, 2, 3], "thing": 2, "think": 2, "those": 2, "through": 2, "time": 2, "togeth": 2, "topic": 0, "tri": 1, "true": 2, "try": 0, "turn": 1, "two": [1, 2], "type": [1, 2], "typeguard": 2, "typguard": 2, "typic": [1, 2], "unit": 1, "up": 2, "us": [0, 1, 2], "valid": [2, 4], "valu": 2, "variabl": 2, "version": 0, "wai": 0, "want": 2, "we": [1, 2], "when": 2, "where": 2, "which": 2, "whose": 2, "would": [0, 1, 2], "x": [0, 1, 2], "you": [0, 1], "your": 1}, "titles": ["Category Theory for python programmers", "Category theory", "category_theory package", "Welcome to Category Theory for Python programmers\u2019s documentation!", "category_theory"], "titleterms": {"": 3, "applic": 2, "categori": [0, 1, 3], "category_theori": [2, 4], "content": 2, "contribut": 0, "core": 2, "document": 3, "functor": 2, "indic": 3, "modul": 2, "monoid": 2, "oper": 2, "packag": 2, "par_oper": 2, "programm": [0, 3], "python": [0, 3], "submodul": 2, "tabl": 3, "test": 0, "theori": [0, 1, 3], "type": 0, "welcom": 3}})