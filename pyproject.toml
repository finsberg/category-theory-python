[build-system]
requires = ["setuptools>=61.2"]
build-backend = "setuptools.build_meta"

[project]
name = "category_theory"
version = "0.1.0"
description = "Learning platform for category theory in python"
authors = [{name = "Henrik Finsberg", email = "henriknf@simula.no"}]
license = {text = "MIT"}
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10 :: Only",
]
keywords = ["category theory", "functional programming"]
requires-python = ">=3.10"
dependencies = ["dask"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/finsberg/category-theory-python"

[project.optional-dependencies]
dev = [
    "black",
    "bump2version",
    "flake8",
    "mypy",
    "pre-commit",
]
doc = [
    "myst-parser",
    "sphinx",
    "sphinx-book-theme",
]
test = [
    "hypothesis",
    "pytest",
    "pytest-cov",
]

[tool.setuptools]
package-dir = {"" = "src"}
zip-safe = false
license-files = ["LICENSE"]
include-package-data = false

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.flake8]
exclude = "docs"
ignore = "E203, E266, E501, W503, E731"
max-line-length = "88"
max-complexity = "18"
select = "B,C,E,F,W,T4"

[tool.aliases]
test = "pytest"

[tool.pytest.ini_options]
addopts = "--cov=src/category_theory --cov-report html --cov-report xml --cov-report term-missing --hypothesis-show-statistics -v"
testpaths = ["tests"]

[tool.mypy]
files = ["src/category_theory"]
ignore_missing_imports = true
exclude = "docs"

[tool.coverage.report]
exclude_lines = [
    "@abstractmethod",
    "@abc.abstractmethod",
    "raise NotImplementedError",
]



[tool.ruff]

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Same as Black.
line-length = 100

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = ["E", "F"]
ignore = ["E402", "E741", "E743", "E731"]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = ["A", "B", "C", "D", "E", "F"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"


[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
